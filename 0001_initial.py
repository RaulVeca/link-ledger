# Generated by Django 5.2.5 on 2025-09-06 23:09

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(blank=True, max_length=5)),
            ],
            options={
                'verbose_name_plural': 'Currencies',
                'db_table': 'currencies',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('legal_name', models.CharField(blank=True, max_length=255)),
                ('vat_number', models.CharField(blank=True, db_index=True, max_length=50)),
                ('registration_number', models.CharField(blank=True, max_length=100)),
                ('tax_code', models.CharField(blank=True, max_length=50)),
                ('is_supplier', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'db_table': 'companies',
                'indexes': [models.Index(fields=['vat_number'], name='companies_vat_num_349aeb_idx'), models.Index(fields=['name'], name='companies_name_c7a1b3_idx')],
            },
        ),
        migrations.CreateModel(
            name='CompanyBankAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(max_length=200)),
                ('account_number', models.CharField(blank=True, max_length=50)),
                ('iban', models.CharField(blank=True, max_length=34)),
                ('swift_code', models.CharField(blank=True, max_length=11)),
                ('is_primary', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='file_handler.company')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='file_handler.currency')),
            ],
            options={
                'verbose_name': 'Company Bank Account',
                'db_table': 'company_bank_accounts',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('bucket_name', models.CharField(max_length=100)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_hash', models.CharField(blank=True, max_length=64)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('processing_started', models.DateTimeField(blank=True, null=True)),
                ('processing_completed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('verified', 'Verified')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('workflow_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('batch_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('priority', models.CharField(default='normal', max_length=20)),
            ],
            options={
                'db_table': 'documents',
                'indexes': [models.Index(fields=['status'], name='documents_status_f31a08_idx'), models.Index(fields=['batch_id'], name='documents_batch_i_b389fc_idx'), models.Index(fields=['upload_date'], name='documents_upload__f45874_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExtractedPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('page_number', models.IntegerField()),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_pages', to='file_handler.document')),
            ],
            options={
                'db_table': 'extracted_pages',
                'ordering': ['document', 'page_number'],
                'unique_together': {('document', 'page_number')},
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(db_index=True, max_length=100)),
                ('invoice_series', models.CharField(blank=True, max_length=50)),
                ('invoice_type', models.CharField(choices=[('standard', 'Standard Invoice'), ('proforma', 'Proforma'), ('credit_note', 'Credit Note'), ('vat_invoice', 'VAT Invoice')], default='standard', max_length=20)),
                ('invoice_date', models.DateField(db_index=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('order_reference', models.CharField(blank=True, max_length=100)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('service_period_start', models.DateField(blank=True, null=True)),
                ('service_period_end', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='file_handler.currency')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices_as_customer', to='file_handler.company')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='file_handler.document')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices_as_supplier', to='file_handler.company')),
            ],
            options={
                'db_table': 'invoices',
            },
        ),
        migrations.CreateModel(
            name='InvoiceAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('deleted', 'Deleted'), ('verified', 'Verified'), ('approved', 'Approved'), ('rejected', 'Rejected')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.CharField(blank=True, max_length=100)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='file_handler.invoice')),
            ],
            options={
                'db_table': 'invoice_audit_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('line_number', models.IntegerField()),
                ('product_code', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField()),
                ('quantity', models.DecimalField(decimal_places=4, default=Decimal('1.0000'), max_digits=15)),
                ('unit_of_measure', models.CharField(blank=True, max_length=20)),
                ('unit_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total', models.DecimalField(decimal_places=2, max_digits=15)),
                ('service_period_start', models.DateField(blank=True, null=True)),
                ('service_period_end', models.DateField(blank=True, null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='file_handler.invoice')),
            ],
            options={
                'db_table': 'invoice_items',
                'ordering': ['invoice', 'line_number'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('credit_card', 'Credit Card'), ('cash', 'Cash'), ('check', 'Check'), ('stripe', 'Stripe'), ('pos', 'POS Terminal'), ('other', 'Other')], max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='file_handler.currency')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='file_handler.invoice')),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='ProcessingJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('success', models.BooleanField(default=False)),
                ('error_details', models.TextField(blank=True)),
                ('pages_processed', models.IntegerField(default=0)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('processing_time_seconds', models.FloatField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_jobs', to='file_handler.document')),
            ],
            options={
                'db_table': 'processing_jobs',
            },
        ),
        migrations.CreateModel(
            name='TaxDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tax_type', models.CharField(max_length=50)),
                ('tax_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('taxable_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_details', to='file_handler.invoice')),
            ],
            options={
                'db_table': 'tax_details',
            },
        ),
        migrations.CreateModel(
            name='CompanyAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_type', models.CharField(choices=[('billing', 'Billing'), ('shipping', 'Shipping'), ('headquarters', 'Headquarters'), ('branch', 'Branch')], max_length=20)),
                ('street', models.CharField(max_length=255)),
                ('street_number', models.CharField(blank=True, max_length=20)),
                ('building', models.CharField(blank=True, max_length=50)),
                ('apartment', models.CharField(blank=True, max_length=20)),
                ('city', models.CharField(max_length=100)),
                ('state_province', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='file_handler.company')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='file_handler.country')),
            ],
            options={
                'verbose_name_plural': 'Company Addresses',
                'db_table': 'company_addresses',
                'unique_together': {('company', 'address_type', 'is_primary')},
            },
        ),
        migrations.CreateModel(
            name='ExtractedMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('field_name', models.CharField(db_index=True, max_length=100)),
                ('field_value', models.TextField()),
                ('field_type', models.CharField(blank=True, max_length=50)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('page_number', models.IntegerField(blank=True, null=True)),
                ('extraction_method', models.CharField(blank=True, max_length=50)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='file_handler.document')),
            ],
            options={
                'db_table': 'extracted_metadata',
                'indexes': [models.Index(fields=['document', 'field_name'], name='extracted_m_documen_017051_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExtractedText',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text_content', models.TextField()),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('bbox_x1', models.FloatField(blank=True, null=True)),
                ('bbox_y1', models.FloatField(blank=True, null=True)),
                ('bbox_x2', models.FloatField(blank=True, null=True)),
                ('bbox_y2', models.FloatField(blank=True, null=True)),
                ('font_size', models.FloatField(blank=True, null=True)),
                ('is_bold', models.BooleanField(default=False)),
                ('is_italic', models.BooleanField(default=False)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_blocks', to='file_handler.extractedpage')),
            ],
            options={
                'db_table': 'extracted_text',
                'indexes': [models.Index(fields=['page'], name='extracted_t_page_id_152e65_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_date'], name='invoices_invoice_e14adb_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='invoices_due_dat_039a25_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['supplier', 'invoice_date'], name='invoices_supplie_af9c24_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['customer', 'invoice_date'], name='invoices_custome_29b2b3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invoice',
            unique_together={('supplier', 'invoice_number')},
        ),
        migrations.AddIndex(
            model_name='invoiceauditlog',
            index=models.Index(fields=['invoice', 'timestamp'], name='invoice_aud_invoice_d7594c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='invoiceitem',
            unique_together={('invoice', 'line_number')},
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_date'], name='payments_payment_aebcb7_idx'),
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['started_at'], name='processing__started_7a8b6f_idx'),
        ),
    ]
